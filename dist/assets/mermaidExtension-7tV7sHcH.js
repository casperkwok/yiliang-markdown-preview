import{m as t}from"./diagram-math-kerwj6V3.js";import"./react-vendor-CwmUxUDx.js";import"./milkdown-Bq6YiaW2.js";let l=!1;const m=(f=!1)=>{l||(t.initialize({startOnLoad:!1,theme:f?"dark":"base",securityLevel:"loose",fontFamily:'Source Han Sans, -apple-system-font, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei UI", "Microsoft YaHei", Arial, sans-serif',themeVariables:{primaryColor:f?"#3b82f6":"#2563eb",primaryTextColor:f?"#ffffff":"#1f2937",primaryBorderColor:f?"#1e40af":"#1d4ed8",secondaryColor:f?"#6366f1":"#f1f5f9",tertiaryColor:f?"#1e293b":"#f8fafc",background:f?"#0f172a":"#ffffff",mainBkg:f?"#1e293b":"#ffffff",secondBkg:f?"#334155":"#f8fafc",tertiaryBkg:f?"#475569":"#f1f5f9",lineColor:f?"#64748b":"#475569",textColor:f?"#f1f5f9":"#1e293b",labelTextColor:f?"#ffffff":"#1f2937",nodeBkg:f?"#1e40af":"#dbeafe",nodeTextColor:f?"#ffffff":"#1e40af",nodeBorder:f?"#3b82f6":"#2563eb",clusterBkg:f?"#1e293b":"#f8fafc",clusterBorder:f?"#475569":"#cbd5e1",defaultLinkColor:f?"#64748b":"#475569",titleColor:f?"#f1f5f9":"#1e293b",activeTaskBkgColor:f?"#059669":"#10b981",activeTaskBorderColor:f?"#047857":"#059669",gridColor:f?"#374151":"#e2e8f0",section0:f?"#1e293b":"#f8fafc",section1:f?"#334155":"#f1f5f9",section2:f?"#475569":"#e2e8f0",section3:f?"#64748b":"#cbd5e1"}}),l=!0)},b=f=>{t.initialize({startOnLoad:!1,theme:f?"dark":"base",securityLevel:"loose",fontFamily:'Source Han Sans, -apple-system-font, BlinkMacSystemFont, "Helvetica Neue", "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei UI", "Microsoft YaHei", Arial, sans-serif',themeVariables:{primaryColor:f?"#3b82f6":"#2563eb",primaryTextColor:f?"#ffffff":"#1f2937",primaryBorderColor:f?"#1e40af":"#1d4ed8",secondaryColor:f?"#6366f1":"#f1f5f9",tertiaryColor:f?"#1e293b":"#f8fafc",background:f?"#0f172a":"#ffffff",mainBkg:f?"#1e293b":"#ffffff",secondBkg:f?"#334155":"#f8fafc",tertiaryBkg:f?"#475569":"#f1f5f9",lineColor:f?"#64748b":"#475569",textColor:f?"#f1f5f9":"#1e293b",labelTextColor:f?"#ffffff":"#1f2937",nodeBkg:f?"#1e40af":"#dbeafe",nodeTextColor:f?"#ffffff":"#1e40af",nodeBorder:f?"#3b82f6":"#2563eb",clusterBkg:f?"#1e293b":"#f8fafc",clusterBorder:f?"#475569":"#cbd5e1",defaultLinkColor:f?"#64748b":"#475569",titleColor:f?"#f1f5f9":"#1e293b",activeTaskBkgColor:f?"#059669":"#10b981",activeTaskBorderColor:f?"#047857":"#059669",gridColor:f?"#374151":"#e2e8f0",section0:f?"#1e293b":"#f8fafc",section1:f?"#334155":"#f1f5f9",section2:f?"#475569":"#e2e8f0",section3:f?"#64748b":"#cbd5e1"}})},C=async(f,o=!1)=>{m(o),b(o);const i=f.querySelectorAll(".mermaid-diagram");for(const e of i){const n=e.getAttribute("data-diagram-id"),r=decodeURIComponent(e.getAttribute("data-diagram-text")||"");if(!(!n||!r))try{if(!await t.parse(r))throw new Error("Invalid Mermaid syntax");const{svg:c}=await t.render(n,r);e.innerHTML=c,e.classList.add("mermaid-rendered")}catch(a){console.error("Error rendering Mermaid diagram:",a),e.innerHTML=`<div class="mermaid-error" style="color: #dc2626; background: #fef2f2; border: 1px solid #fecaca; border-radius: 4px; padding: 1em; margin: 1em 0;">
        <strong>Mermaid Error:</strong> ${a.message}
        <pre style="margin-top: 0.5em; font-size: 0.9em; background: rgba(0,0,0,0.1); padding: 0.5em; border-radius: 4px;">${r}</pre>
      </div>`}}};export{C as renderMermaidDiagrams,b as updateMermaidTheme};
